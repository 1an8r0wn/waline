name: 'Publish Waline'

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/release.yml
      - packages/client/**
      - packages/admin/**
      - packages/server/**
      - docs/**

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  
    - uses: pnpm/action-setup@v2
    - uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: pnpm
    - run: pnpm install --frozen-lockfile

  client:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: marceloprado/has-changed-path@v1.0.1
      id: changed-client
      with:
        paths: packages/client
    
    - uses: marceloprado/has-changed-path@v1.0.1
      id: changed-docs
      with:
        paths: docs

    - if: steps.changed-client.outputs.changed == 'true' || steps.changed-docs.outputs.changed == 'true'
      run: |
        pnpm --filter ./packages/client run build

    - id: publishClient
      name: "publish @waline/client"
      if: steps.changed-client.outputs.changed == 'true'
      uses: JS-DevTools/npm-publish@v2
      with:
        token: ${{ secrets.NPM_TOKEN }}
        package: ./packages/client
  
  docs:
    needs: client
    runs-on: ubuntu-latest
    steps:
    - uses: marceloprado/has-changed-path@v1.0.1
      id: changed-docs
      with:
        paths: docs

    - name: Build Docs
      if: steps.changed-docs.outputs.changed == 'true'
      run: |-
        pnpm docs:build
        > docs/src/.vuepress/dist/.nojekyll

    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@v4
      if: steps.changed-docs.outputs.changed == 'true'
      with:
        branch: gh-pages
        folder: docs/src/.vuepress/dist
        ssh-key: ${{ secrets.SSH_TOKEN }}
        repository-name: walinejs/walinejs.github.io

  admin:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: marceloprado/has-changed-path@v1.0.1
      id: changed-admin
      with:
        paths: packages/admin
    
    - if: steps.changed-admin.outputs.changed == 'true'
      run: |
        pnpm --filter ./packages/admin run build
    
    - id: publishAdmin
      name: "publish @waline/admin"
      if: steps.changed-admin.outputs.changed == 'true'
      uses: JS-DevTools/npm-publish@v2
      with:
        token: ${{ secrets.NPM_TOKEN }}
        package: ./packages/admin
  
  server:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - id: publishServer
      name: "publish @waline/vercel"
      uses: JS-DevTools/npm-publish@v2
      with:
        token: ${{ secrets.NPM_TOKEN }}
        package: ./packages/server

  docker:
    needs: server
    if: needs.server.steps.publishServer.outputs.old-version != needs.server.steps.publishServer.outputs.version
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push alpine
      uses: docker/build-push-action@v4
      with:
        file: ./packages/server/Dockerfile.alpine
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: |
          lizheming/waline:alpine
          lizheming/waline:${{ steps.publishServer.outputs.version }}-alpine

    - name: Build and push debian
      uses: docker/build-push-action@v4
      with:
        file: ./packages/server/Dockerfile
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: |
          lizheming/waline:latest
          lizheming/waline:${{ steps.publishServer.outputs.version }}