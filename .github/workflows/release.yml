name: 'Publish Waline'

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/release.yml
      - packages/client
      - packages/admin
      - packages/server

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  
    - uses: pnpm/action-setup@v2
    - uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: pnpm
    - run: pnpm install --frozen-lockfile
    - run: pnpm --filter ./packages/client --filter ./packages/admin run build

  client:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: marceloprado/has-changed-path@v1.0.1
      id: changed-client
      with:
        paths: packages/client/package.json

    - name: Exit
      if: steps.changed-client.outputs.changed != 'true'
      run: |
        echo '@waline/client does not need to release a new version';
        exit 0;

    - id: publishClient
      name: "publish @waline/client"
      uses: JS-DevTools/npm-publish@v2
      with:
        token: ${{ secrets.NPM_TOKEN }}
        package: ./packages/client
  
  admin:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: marceloprado/has-changed-path@v1.0.1
      id: changed-admin
      with:
        paths: packages/admin/package.json
      
    - name: Exit
      if: steps.changed-admin.outputs.changed != 'true'
      run: |
        echo '@waline/admin does not need to release a new version';
        exit 0;

    - id: publishAdmin
      name: "publish @waline/admin"
      uses: JS-DevTools/npm-publish@v2
      with:
        token: ${{ secrets.NPM_TOKEN }}
        package: ./packages/admin
  
  server:
    needs: build
    runs-on: ubuntu-latest
    steps:
    # publish to npm
    - uses: marceloprado/has-changed-path@v1.0.1
      id: changed-server
      with:
        paths: packages/server/package.json
    
    - name: Exit NPM
      if: steps.changed-server.outputs.changed != 'true'
      run: |
        echo '@waline/vercel does not need to release a new version';
        exit 0;

    - id: publishServer
      name: "publish @waline/vercel"
      uses: JS-DevTools/npm-publish@v2
      with:
        token: ${{ secrets.NPM_TOKEN }}
        package: ./packages/server

    # publish to docker
    - name: Exit Docker
      if: steps.publishServer.outputs.old-version != steps.publishServer.outputs.version
      run: |
        echo '@waline/vercel no new releases';
        exit 0;

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push alpine
      uses: docker/build-push-action@v4
      with:
        file: ./packages/server/Dockerfile.alpine
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: |
          lizheming/waline:alpine
          lizheming/waline:${{ steps.publishServer.outputs.version }}-alpine

    - name: Build and push debian
      uses: docker/build-push-action@v4
      with:
        file: ./packages/server/Dockerfile
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: |
          lizheming/waline:latest
          lizheming/waline:${{ steps.publishServer.outputs.version }}